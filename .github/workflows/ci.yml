name: MERN CI  # 👈 Workflow name shown in GitHub Actions tab

on:
  push:
    branches: [main]  # 👈 Runs this workflow only when code is pushed to 'main' branch

jobs:
  mongo-init-test:
    runs-on: ubuntu-latest  # 👈 Uses latest Ubuntu runner as the build environment
    
    env:
      PORT: ${{ secrets.PORT }}          # 👈 Securely loads environment variables from GitHub Secrets
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    services:
      mongo:  # 👈 Starts a MongoDB service container for testing
        image: mongo  # 👈 Uses the official MongoDB Docker image
        ports: ['27017:27017']  # 👈 Exposes MongoDB default port so the app can connect
    
    steps:
      - name: Checkout Repository  # 👈 Step 1: Pulls repository code into the runner
        uses: actions/checkout@v5  # 👈 Official GitHub Action for checking out code

      - name: Setup Node.js  # 👈 Step 2: Prepares Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 👈 Specifies Node.js version compatible with your MERN stack

      - name: Waiting for MongoDB to be ready  # 👈 Step 3: Ensures MongoDB container is ready before proceeding
        run: |
          until nc -z localhost 27017; do
            echo "Waiting for MongoDB..."
            sleep 5
          done
          echo "✅ MongoDB is up and running"

      - name: Install Dependencies  # 👈 Step 4: Installs project dependencies cleanly
        working-directory: ./backend  # 👈 Targets backend folder for install, Skips funding/audit messages to keep logs clean
        run: |
          npm install --no-fund --no-audit

      - name: Check for Deprecated Packages  # 👈 Step 5: Checks and lists outdated/deprecated packages and Lists deprecated packages but doesn’t fail the CI
        working-directory: ./backend
        run: |
          echo "🔍 Checking for deprecated npm packages..."
          npx npm-check-updates -d

      - name: Seed MongoDB  # 👈 Step 6: Populates DB with sample/test data
        working-directory: ./backend
        run: |
          node seedTasksData.js

      - name: Running Backend Tests  # 👈 Step 7: Executes backend test suite
        working-directory: ./backend
        run: npm test  # 👈 Runs tests defined in package.json
