name: MERN CI

on:
  push:
    branches: [main]

jobs:
  mongo-init-test:
    runs-on: ubuntu-latest
    
    env:
      PORT: ${{ secrets.PORT }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    services:
      mongo:
        image: mongo:6.0
        ports: ['27017:27017']
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Wait for MongoDB to be ready
        run: |
          echo "⏳ Waiting for MongoDB to accept connections on localhost:27017..."
          for i in {1..20}; do
            if nc -z localhost 27017; then
              echo "✅ MongoDB is accepting connections"
              exit 0
            fi
            echo "Still waiting ($i/20)..."
            sleep 3
          done
          echo "❌ MongoDB did not become ready in time" >&2
          exit 1

      - name: Install Dependencies (backend)
        working-directory: ./backend
        run: |
          # use npm ci for deterministic installs in CI (requires package-lock.json)
          npm ci --no-fund --no-audit

      - name: Check for Deprecated / Outdated Packages
        working-directory: ./backend
        run: |
          echo "🔍 Checking for outdated/deprecated packages (report only)"
          # npm-check-updates prints info and may exit non-zero; do not fail the job
          npx npm-check-updates -d || true

      - name: Seed MongoDB
        # Ensure this path matches where seedTasksData.js actually lives in your repo.
        working-directory: ./backend
        run: |
          echo "🌱 Seeding MongoDB data using MONGO_URI=$MONGO_URI"
          node seedTasksData.js

      - name: Run Backend Tests
        working-directory: ./backend
        run: npm test
